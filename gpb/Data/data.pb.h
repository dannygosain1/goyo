/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev at Wed Mar  7 18:13:37 2018. */

#ifndef PB_DATA_PB_H_INCLUDED
#define PB_DATA_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Data {
    int32_t x_accel;
    int32_t y_accel;
    int32_t z_accel;
    int32_t fsr;
/* @@protoc_insertion_point(struct:Data) */
} Data;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Data_init_default                        {0, 0, 0, 0}
#define Data_init_zero                           {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Data_x_accel_tag                         1
#define Data_y_accel_tag                         2
#define Data_z_accel_tag                         3
#define Data_fsr_tag                             4

/* Struct field encoding specification for nanopb */
extern const pb_field_t Data_fields[5];

/* Maximum encoded size of messages (where known) */
#define Data_size                                44

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define DATA_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
