/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev at Tue Mar  6 15:15:15 2018. */

#ifndef PB_MESSAGE_PB_H_INCLUDED
#define PB_MESSAGE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Msg {
    char val[128];
/* @@protoc_insertion_point(struct:Msg) */
} Msg;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Msg_init_default                         {""}
#define Msg_init_zero                            {""}

/* Field tags (for use in manual encoding/decoding) */
#define Msg_val_tag                              2

/* Struct field encoding specification for nanopb */
extern const pb_field_t Msg_fields[2];

/* Maximum encoded size of messages (where known) */
#define Msg_size                                 131

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
